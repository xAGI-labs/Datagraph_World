// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // World ID Authentication
  worldIdNullifier  String  @unique // Unique identifier from World ID
  worldIdVerified   Boolean @default(false)
  verificationLevel String? // "orb", "device", "passport"
  worldChainAddress String? @unique // World Chain wallet address for payments

  // Basic user info (can be collected during onboarding)
  name  String?
  email String?
  image String?

  // User stats
  promptsSubmitted     Int @default(0)
  comparisonsCompleted Int @default(0)
  dayStreak            Int @default(0)
  vibePoints           Int @default(0)

  // Onboarding info
  hasOnboarded   Boolean @default(false)
  age            String?
  educationLevel String?
  country        String?
  city           String?
  occupation     String?
  gender         String?

  // Skills and preferences
  languages          String[] @default([])
  skills             String[] @default([])
  experienceLevel    String?
  interests          String[] @default([])
  projectPreferences String[] @default([])

  lastActiveDate DateTime?

  // Relations
  prompts            Prompt[]
  comparisons        Comparison[]
  worldChainPayments WorldChainPayment[]
}

model Prompt {
  id        String   @id @default(cuid())
  userId    String
  text      String
  category  String?
  createdAt DateTime @default(now())

  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  comparisons Comparison[]
}

model Comparison {
  id            String   @id @default(cuid())
  userId        String
  promptId      String
  prompt        String
  modelA        String
  modelB        String
  modelALabel   String
  modelBLabel   String
  selectedModel String?
  feedback      String?
  responseTimeA Int?
  responseTimeB Int?
  createdAt     DateTime @default(now())

  selectedNeither   Boolean @default(false)
  userCorrectAnswer String?

  // World Chain payment info
  paymentId String? // Reference to WorldChainPayment
  isPaid    Boolean @default(false)

  user      User               @relation(fields: [userId], references: [id])
  promptRef Prompt             @relation(fields: [promptId], references: [id])
  payment   WorldChainPayment? @relation(fields: [paymentId], references: [id])
}

// World Chain Payment model for per-comparison payments
model WorldChainPayment {
  id     String @id @default(cuid())
  userId String

  // Payment details
  reference String @unique // UUID for payment tracking
  amount    Float // Amount in tokens
  token     String // "WLD" or "USDC"
  status    String @default("pending") // pending, completed, failed

  // World Chain transaction details
  transactionId   String? // Transaction ID from World Chain
  transactionHash String? // On-chain tx hash

  description String // e.g., "AI Comparison Payment"
  createdAt   DateTime  @default(now())
  completedAt DateTime?

  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  comparisons Comparison[]
}
